[{"_path":"/modules/modularity/info","_dir":"modularity","_draft":false,"_partial":false,"_locale":"","title":"Learning objectives","description":"","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"after completing Unit 1 you will have learned\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"the basics of reproducible research"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"the basics of project design"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"some important eScience best practices."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": Unit 1 does not involve practical hands-on; after completing Unit 1 you will have learned some of basics of modular programming and you should be able to apply the principle you have learned in this unit in your research projects."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:modularity:info.md","_source":"local_fs","_file":"modules/modularity/info.md","_stem":"modules/modularity/info","_extension":"md","plainText":"---\ntitle: Learning objectives\ntype: info\norder: 0\n---\n- after completing Unit 1 you will have learned \n  - the basics of reproducible research \n  - the basics of project design \n  - some important eScience best practices. \n\n **Note**: Unit 1 does not involve practical hands-on; after completing Unit 1 you will have learned some of basics of modular programming and you should be able to apply the principle you have learned in this unit in your research projects.  \n\n"},{"_path":"/modules/modularity/context","_dir":"modularity","_draft":false,"_partial":false,"_locale":"","title":"Background unit 1","description":"","type":"reading","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"background"},"children":[{"type":"text","value":"Background"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Modular programming originated back in the 1960s when developers began breaking up larger software programs into smaller parts. Although this concept has been around for six decades, it is still extremely relevant and useful for today’s software developers, and one of the key programming principles. At the eScience center, we really encourage modularity in all our software development projects as it helps the center to increase re-usability across projects and cross scientific disciplines, which is a key to the eScience domain as a whole."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"background","depth":3,"text":"Background"}]}},"_type":"markdown","_id":"local_fs:modules:modularity:context.md","_source":"local_fs","_file":"modules/modularity/context.md","_stem":"modules/modularity/context","_extension":"md","plainText":"---\ntitle: Background unit 1 \ntype: reading\norder: 1\n---\n\n### Background \nModular programming originated back in the 1960s when developers began breaking up larger software programs into smaller parts. Although this concept has been around for six decades, it is still extremely relevant and useful for today’s software developers, and one of the key programming principles. At the eScience center, we really encourage modularity in all our software development projects as it helps the center to increase re-usability across projects and cross scientific disciplines, which is a key to the eScience domain as a whole. \n"},{"_path":"/modules/modularity/instructions","_dir":"modularity","_draft":false,"_partial":false,"_locale":"","title":"Unit 1 Instructions","description":"","type":"reading","order":2,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"instructions"},"children":[{"type":"text","value":"Instructions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For Unit 1, we selected a couple of references which will help you to develop a good understanding of the principles of modular design. "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" is a talk published by Oracle learning and gives a good overview of software modularity and architectures.  "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" is the first lecture of course at University of Verginia, it explains many concepts on modular design what are the qualities of good modules, metrics of module quality-cohesion and coupling. "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" is a retrospective talk on the modularity theme, it includes a brief history of software modularity since its introduction, why it is useful and the good and the bad of modularity over its evolution. "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" is proposed as a further reading (extra-material) for RSE who want to reflect deeper on the software modularity. Similarly, reference "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":" is extra-material focusing on Cohesion and coupling in python."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"To complete Unit 1, you are expected to:"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Read/watch the suggested "},{"type":"element","tag":"a","props":{"href":"http://localhost:3000/internal-training/modules/Modularity/teaching_material","rel":["nofollow"]},"children":[{"type":"text","value":"teaching material"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prepare a list of questions and a short reflection on the suggested material. This will be used for the discussions during the weekly consultation hours with the coach."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Please send the list of questions to your coach one day before the weekly meetings.."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Time expected to complete this unit: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"4 hours"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"instructions","depth":3,"text":"Instructions"}]}},"_type":"markdown","_id":"local_fs:modules:modularity:instructions.md","_source":"local_fs","_file":"modules/modularity/instructions.md","_stem":"modules/modularity/instructions","_extension":"md","plainText":"---\ntitle: Unit 1 Instructions \ntype: reading\norder: 2\n---\n\n### Instructions \n\nFor Unit 1, we selected a couple of references which will help you to develop a good understanding of the principles of modular design. [1] is a talk published by Oracle learning and gives a good overview of software modularity and architectures.  [2] is the first lecture of course at University of Verginia, it explains many concepts on modular design what are the qualities of good modules, metrics of module quality-cohesion and coupling. [3] is a retrospective talk on the modularity theme, it includes a brief history of software modularity since its introduction, why it is useful and the good and the bad of modularity over its evolution. [3] is proposed as a further reading (extra-material) for RSE who want to reflect deeper on the software modularity. Similarly, reference [4] is extra-material focusing on Cohesion and coupling in python.  \n\n**To complete Unit 1, you are expected to:** \n\n - Read/watch the suggested [teaching material](http://localhost:3000/internal-training/modules/Modularity/teaching_material) \n - Prepare a list of questions and a short reflection on the suggested material. This will be used for the discussions during the weekly consultation hours with the coach.  \n - Please send the list of questions to your coach one day before the weekly meetings.. \n\nTime expected to complete this unit: **4 hours**\n"},{"_path":"/modules/modularity/slides-modularity","_dir":"modularity","_draft":false,"_partial":false,"_locale":"","title":"Software Modularity","description":"===","type":"slides","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"software-modularity"},"children":[{"type":"text","value":"Software Modularity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"software-modularity"},"children":[{"type":"text","value":"Software Modularity "},{"type":"element","tag":"todo","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"020 - 460 47 70"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"software-modularity","depth":2,"text":"Software Modularity "}]}},"_type":"markdown","_id":"local_fs:modules:modularity:slides-modularity.md","_source":"local_fs","_file":"modules/modularity/slides-modularity.md","_stem":"modules/modularity/slides-modularity","_extension":"md","plainText":"---\ntitle: Software Modularity \ntype: slides\norder: 3\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Software Modularity\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Software Modularity <TODO> \n \n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n \n020 - 460 47 70   \n"},{"_path":"/modules/modularity/teaching_material","_dir":"modularity","_draft":false,"_partial":false,"_locale":"","title":"Teaching Material","description":"","type":"exercise","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"teaching-material"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Teaching Material"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software Modularity: Paradoxes, Principles, and Architectures "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=D37sb08SodU","rel":["nofollow"]},"children":[{"type":"text","value":"conferenceTalk"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Modularity lecture university of Virginia "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=Q76mO3eI4qE","rel":["nofollow"]},"children":[{"type":"text","value":"online Lecture"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Cohesion and coupling: write BETTER PYTHON CODE ["},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=eiDyK_ofPPM","rel":["nofollow"]},"children":[{"type":"text","value":"Part 1"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=Kv5jhbSkqLE","rel":["nofollow"]},"children":[{"type":"text","value":"Part 2"}]},{"type":"text","value":"]"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"teaching-material","depth":3,"text":"Teaching Material"}]}},"_type":"markdown","_id":"local_fs:modules:modularity:teaching_material.md","_source":"local_fs","_file":"modules/modularity/teaching_material.md","_stem":"modules/modularity/teaching_material","_extension":"md","plainText":"---\ntitle: Teaching Material  \ntype: exercise\norder: 3\n---\n\n### **Teaching Material**\n\n- Software Modularity: Paradoxes, Principles, and Architectures [conferenceTalk](https://www.youtube.com/watch?v=D37sb08SodU)\n- Modularity lecture university of Virginia [online Lecture](https://www.youtube.com/watch?v=Q76mO3eI4qE)\n- Cohesion and coupling: write BETTER PYTHON CODE [[Part 1](https://www.youtube.com/watch?v=eiDyK_ofPPM), [Part 2](https://www.youtube.com/watch?v=Kv5jhbSkqLE)] \n"},{"_path":"/modules/modularity/further_reading","_dir":"modularity","_draft":false,"_partial":false,"_locale":"","title":"Further Reading","description":"","type":"reading","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"further-reading"},"children":[{"type":"text","value":"Further Reading"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Modularity in Software: A Retrospective by Dean Wampler: "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=yMc6s7qT988","rel":["nofollow"]},"children":[{"type":"text","value":"conferenceTalk"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"further-reading","depth":3,"text":"Further Reading"}]}},"_type":"markdown","_id":"local_fs:modules:modularity:further_reading.md","_source":"local_fs","_file":"modules/modularity/further_reading.md","_stem":"modules/modularity/further_reading","_extension":"md","plainText":"---\ntitle: Further Reading \ntype: reading\norder: 5\n---\n\n### Further Reading\n\n -  Modularity in Software: A Retrospective by Dean Wampler: [conferenceTalk](https://www.youtube.com/watch?v=yMc6s7qT988)\n"}]