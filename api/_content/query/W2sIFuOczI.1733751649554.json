[{"_path":"/modules/performance-optimization-and-parallelization/slides-performance-optimization-and-parallelization","_dir":"performance-optimization-and-parallelization","_draft":false,"_partial":false,"_locale":"","title":"Performance-optimization-and-parallelization","description":"===","type":"slides","order":3,"_type":"markdown","_id":"local_fs:modules:Performance-optimization-and-parallelization:slides-performance-optimization-and-parallelization.md","_source":"local_fs","_file":"modules/Performance-optimization-and-parallelization/slides-performance-optimization-and-parallelization.md","_extension":"md","plainText":"---\ntitle: Performance-optimization-and-parallelization\ntype: slides\norder: 3\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# GitHub the basics\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Performance-optimization-and-parallelization <TODO> \n \n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n \n020 - 460 47 70   \n"},{"_path":"/modules/programming-paradigms/context","_dir":"programming-paradigms","_draft":false,"_partial":false,"_locale":"","title":"Background unit 2","description":"","type":"reading","order":1,"_type":"markdown","_id":"local_fs:modules:Programming-paradigms:context.md","_source":"local_fs","_file":"modules/Programming-paradigms/context.md","_extension":"md","plainText":"---\ntitle: Background unit 2 \ntype: reading\norder: 1\n---\n\n### Background \n\nFor Unit 2, we selected a number of references which will help you go beyond just knowing the syntax of the language.\n[teaching material 1](https://www.youtube.com/watch?v=Pg3UeB-5FdA) is a talk given at a conference in 2017 which goes over the common programming paradigm and explains the similarities and the differences. \n[teaching material 2](https://www.youtube.com/watch?v=Ps8jOj7diA0) is the first lecture of course at Stanford university which aims to teach several programming languages. \nThe lecture is a general introduction to the course, it stresses the intellectual value of learning a programming language which is to study the paradigm they represent, so do not focus on the details but more on how the lecturer makes the link between a language and its paradigm.\n"}]