[{"_path":"/modules/performance-optimization-and-parallelization/info","_dir":"performance-optimization-and-parallelization","_draft":false,"_partial":false,"_locale":"","title":"Learning objectives","description":"After completing unit 5 you will have acquired a basic concept of performance optimization and parallelization like speedup, scalability, Amdahl’s and Gustafson’s laws, how to design parallel programs, domain decomposition, synchronization, etc.","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After completing unit 5 you will have acquired a basic concept of performance optimization and parallelization like speedup, scalability, Amdahl’s and Gustafson’s laws, how to design parallel programs, domain decomposition, synchronization, etc."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Understand Parallel Computing Architectures: Learners will be able to describe the classification of modern computing resources based on hardware-supported parallelism, including multi-core systems, multi-processor machines, clusters, and cloud infrastructures."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Analyze Performance Optimization in Parallel Programming: Learners will be able to identify key performance considerations in parallel programming and explain how to optimize programs to effectively utilize available computing power."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Apply Basic Parallel Programming Concepts"},{"type":"element","tag":"div","props":{},"children":[]},{"type":"text","value":" will be able to write and analyze simple parallel programs using insights from the Livermore Computing Center tutorial and Mats Brorsson's lecture, focusing on performance optimization and resource utilization."},{"type":"element","tag":"br","props":{},"children":[]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:Performance-optimization-and-parallelization:info.md","_source":"local_fs","_file":"modules/Performance-optimization-and-parallelization/info.md","_extension":"md","plainText":"---\ntitle: Learning objectives\ntype: info\norder: 0\n---\n\nAfter completing unit 5 you will have acquired a basic concept of performance optimization and parallelization like speedup, scalability, Amdahl’s and Gustafson’s laws, how to design parallel programs, domain decomposition, synchronization, etc.\n\n- Understand Parallel Computing Architectures: Learners will be able to describe the classification of modern computing resources based on hardware-supported parallelism, including multi-core systems, multi-processor machines, clusters, and cloud infrastructures.\n\n- Analyze Performance Optimization in Parallel Programming: Learners will be able to identify key performance considerations in parallel programming and explain how to optimize programs to effectively utilize available computing power.\n\n- Apply Basic Parallel Programming Concepts:Learners will be able to write and analyze simple parallel programs using insights from the Livermore Computing Center tutorial and Mats Brorsson's lecture, focusing on performance optimization and resource utilization.\n"},{"_path":"/modules/performance-optimization-and-parallelization/context","_dir":"performance-optimization-and-parallelization","_draft":false,"_partial":false,"_locale":"","title":"Background unit 5","description":"","type":"reading","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"background"},"children":[{"type":"text","value":"Background"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As modern computing resources are increasingly geared towards the parallel execution of multiple programs. Nowadays, computing resources can be classified according to the level at which the hardware supports parallelism, with multi-core and multi-processor computers having multiple processing elements within a single machine, while clusters and clouds use multiple computers to work on the same task. Developing skills to write parallel programs becomes essential to exploit the available computing power."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"background","depth":3,"text":"Background"}]}},"_type":"markdown","_id":"local_fs:modules:Performance-optimization-and-parallelization:context.md","_source":"local_fs","_file":"modules/Performance-optimization-and-parallelization/context.md","_extension":"md","plainText":"---\ntitle: Background unit 5 \ntype: reading\norder: 1 \n---\n\n### Background \nAs modern computing resources are increasingly geared towards the parallel execution of multiple programs. Nowadays, computing resources can be classified according to the level at which the hardware supports parallelism, with multi-core and multi-processor computers having multiple processing elements within a single machine, while clusters and clouds use multiple computers to work on the same task. Developing skills to write parallel programs becomes essential to exploit the available computing power.\n"},{"_path":"/modules/performance-optimization-and-parallelization/instructions","_dir":"performance-optimization-and-parallelization","_draft":false,"_partial":false,"_locale":"","title":"Unit 5 Instructions","description":"","type":"reading","order":2,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"instructions"},"children":[{"type":"text","value":"Instructions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For Unit 5, we selected two references which will help you to acquire the necessary knowledge of performance optimization and parallel programming. The Introduction to Parallel Computing Tutorial given by the Livermore computing Center is an excellent introduction to the topics of this Unit "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":". This tutorial can be combined with the 20 minutes introduction to parallel programming: Performance aspects, by Mats Brorsson from University of Luxembourg "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To complete Unit 5, you are expected to:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Read/watch the suggested teaching material."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prepare a list of questions and a short reflection on the suggested material. This will be used for the discussions during the weekly consultation hours with the coach."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Please send the list of questions to your coach one day before."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Practical hands-on for this unit are provided by the material used for eScience Center External Training program "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":". You can do the hands-on individually or join a the eScience Center external workshop. Check the eScience Digital-skills for the workshops schedule, contact the eScience Center Training  to check whether there is still space for you to join."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Time expected to complete this unit: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"4 hours"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"instructions","depth":3,"text":"Instructions"}]}},"_type":"markdown","_id":"local_fs:modules:Performance-optimization-and-parallelization:instructions.md","_source":"local_fs","_file":"modules/Performance-optimization-and-parallelization/instructions.md","_extension":"md","plainText":"---\ntitle: Unit 5 Instructions \ntype: reading\norder: 2\n---\n\n### Instructions \n\nFor Unit 5, we selected two references which will help you to acquire the necessary knowledge of performance optimization and parallel programming. The Introduction to Parallel Computing Tutorial given by the Livermore computing Center is an excellent introduction to the topics of this Unit [1]. This tutorial can be combined with the 20 minutes introduction to parallel programming: Performance aspects, by Mats Brorsson from University of Luxembourg [2].\n\nTo complete Unit 5, you are expected to:\n\n - Read/watch the suggested teaching material.\n\n - Prepare a list of questions and a short reflection on the suggested material. This will be used for the discussions during the weekly consultation hours with the coach.\n\n - Please send the list of questions to your coach one day before.\n\n - Practical hands-on for this unit are provided by the material used for eScience Center External Training program [4]. You can do the hands-on individually or join a the eScience Center external workshop. Check the eScience Digital-skills for the workshops schedule, contact the eScience Center Training  to check whether there is still space for you to join.\n\nTime expected to complete this unit: **4 hours**\n"},{"_path":"/modules/performance-optimization-and-parallelization/slides-performance-optimization-and-parallelization","_dir":"performance-optimization-and-parallelization","_draft":false,"_partial":false,"_locale":"","title":"Performance-optimization-and-parallelization","description":"===","type":"slides","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"github-the-basics"},"children":[{"type":"text","value":"GitHub the basics"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"performance-optimization-and-parallelization"},"children":[{"type":"text","value":"Performance-optimization-and-parallelization "},{"type":"element","tag":"todo","props":{},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"020 - 460 47 70"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"performance-optimization-and-parallelization","depth":2,"text":"Performance-optimization-and-parallelization "}]}},"_type":"markdown","_id":"local_fs:modules:Performance-optimization-and-parallelization:slides-performance-optimization-and-parallelization.md","_source":"local_fs","_file":"modules/Performance-optimization-and-parallelization/slides-performance-optimization-and-parallelization.md","_extension":"md","plainText":"---\ntitle: Performance-optimization-and-parallelization\ntype: slides\norder: 3\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# GitHub the basics\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Performance-optimization-and-parallelization <TODO> \n \n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n \n020 - 460 47 70   \n"},{"_path":"/modules/performance-optimization-and-parallelization/teaching_material","_dir":"performance-optimization-and-parallelization","_draft":false,"_partial":false,"_locale":"","title":"Teaching Material","description":"","type":"exercise","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"teaching-material"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Teaching Material"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Introduction to Parallel computing, Livermore Computing Center "},{"type":"element","tag":"a","props":{"href":"https://hpc.llnl.gov/documentation/tutorials/introduction-parallel-computing-tutorial","rel":["nofollow"]},"children":[{"type":"text","value":"Online Tutorial"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"threading vs multiprocessing in python "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=AZnGRKFUU0c","rel":["nofollow"]},"children":[{"type":"text","value":"Talk"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Performing Asynchronous I/O Bound Operations (Jeffrey Richter) "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=hB0K1JWFoqs","rel":["nofollow"]},"children":[{"type":"text","value":"Talk"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Programming Paradigms material proposed by the NLeSC external Training: intermediate Research software Development "},{"type":"element","tag":"a","props":{"href":"https://carpentries-incubator.github.io/lesson-parallel-python/","rel":["nofollow"]},"children":[{"type":"text","value":"online Material"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"teaching-material","depth":3,"text":"Teaching Material"}]}},"_type":"markdown","_id":"local_fs:modules:Performance-optimization-and-parallelization:teaching_material.md","_source":"local_fs","_file":"modules/Performance-optimization-and-parallelization/teaching_material.md","_extension":"md","plainText":"---\ntitle: Teaching Material  \ntype: exercise\norder: 5\n---\n\n### **Teaching Material**\n\n\nIntroduction to Parallel computing, Livermore Computing Center [Online Tutorial](https://hpc.llnl.gov/documentation/tutorials/introduction-parallel-computing-tutorial)\n\nthreading vs multiprocessing in python [Talk](https://www.youtube.com/watch?v=AZnGRKFUU0c)\n\nPerforming Asynchronous I/O Bound Operations (Jeffrey Richter) [Talk](https://www.youtube.com/watch?v=hB0K1JWFoqs) \n\nProgramming Paradigms material proposed by the NLeSC external Training: intermediate Research software Development [online Material](https://carpentries-incubator.github.io/lesson-parallel-python/) \n\n"},{"_path":"/modules/performance-optimization-and-parallelization/further_reading","_dir":"performance-optimization-and-parallelization","_draft":false,"_partial":false,"_locale":"","title":"Further Reading","description":"","type":"reading","order":6,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"further-reading"},"children":[{"type":"text","value":"Further Reading"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Parallel programming, EPFL "},{"type":"element","tag":"a","props":{"href":"https://www.coursera.org/learn/scala-parallel-programming#syllabus","rel":["nofollow"]},"children":[{"type":"text","value":"MOOC"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Advanced Python Multithreading in Python: "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=_4Y7-NSiOEs","rel":["nofollow"]},"children":[{"type":"text","value":"IO-Bound vs CPU-Bound"}]},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=d1jfCRc9zCU&list=PLE3Y6O9R81lw1G5LujnP2fwJ-dgnX0m6r&index=34","rel":["nofollow"]},"children":[{"type":"text","value":"Multi-core and Hyperthreading"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"further-reading","depth":3,"text":"Further Reading"}]}},"_type":"markdown","_id":"local_fs:modules:Performance-optimization-and-parallelization:further_reading.md","_source":"local_fs","_file":"modules/Performance-optimization-and-parallelization/further_reading.md","_extension":"md","plainText":"---\ntitle: Further Reading \ntype: reading\norder: 6\n---\n\n### Further Reading\n\n\n- Parallel programming, EPFL [MOOC](https://www.coursera.org/learn/scala-parallel-programming#syllabus)\n\n- Advanced Python Multithreading in Python: [IO-Bound vs CPU-Bound](https://www.youtube.com/watch?v=_4Y7-NSiOEs)[Multi-core and Hyperthreading](https://www.youtube.com/watch?v=d1jfCRc9zCU&list=PLE3Y6O9R81lw1G5LujnP2fwJ-dgnX0m6r&index=34)\n"}]